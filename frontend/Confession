<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Confession Board | AnonConfess</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet"/>
</head>
<body class="bg-gradient-to-br from-green-200 to-green-500 min-h-screen p-6">
  <div class="max-w-2xl mx-auto bg-white rounded-2xl shadow-lg p-6">
    <h1 class="text-3xl font-bold text-green-800 mb-4 text-center">Anonymous Confession Board</h1>
    <p id="topicOwner" class="text-sm text-gray-500 text-center mb-6"></p>

    <form id="confessForm" class="mb-8">
      <textarea id="confession" rows="4" placeholder="Type your anonymous message here..." class="w-full border-2 border-green-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-green-500"></textarea>
      <button type="submit" class="mt-4 bg-green-700 text-white py-2 px-4 rounded hover:bg-green-800 transition">Submit Confession</button>
    </form>

    <hr class="mb-6"/>

    <h2 class="text-xl font-semibold text-green-700 mb-3">Messages</h2>
    <ul id="messages" class="space-y-4">
      <!-- Messages will be added here -->
    </ul>

    <div class="mt-8 text-sm text-center">
      <a href="index.html" class="text-green-700 hover:underline">‚Üê Back to Home</a>
    </div>
  </div>

  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const userId = urlParams.get("user");

    const topicOwner = document.getElementById("topicOwner");
    const form = document.getElementById("confessForm");
    const messagesList = document.getElementById("messages");

    if (!userId) {
      topicOwner.innerText = "Invalid or missing user ID.";
      form.style.display = "none";
    } else {
      topicOwner.innerText = `Confessions for: ${userId}`;
      loadMessages();
    }

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const confession = document.getElementById("confession").value.trim();
      if (!confession) return;

      try {
        await fetch(`http://localhost:5000/api/confess/${userId}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ message: confession }),
        });

        document.getElementById("confession").value = "";
        loadMessages();
      } catch (error) {
        alert("Error submitting confession.");
      }
    });

    async function loadMessages() {
      try {
        const res = await fetch(`http://localhost:5000/api/confess/${userId}`);
        const messages = await res.json();

        messagesList.innerHTML = "";
        messages.reverse().forEach((entry) => {
          const li = document.createElement("li");
          li.className = "bg-green-100 border border-green-300 rounded p-3 text-gray-800";
          li.innerText = entry.message;
          messagesList.appendChild(li);
        });
      } catch (error) {
        messagesList.innerHTML = "<li class='text-red-600'>Error loading messages.</li>";
      }
    }
  </script>
</body>
</html>
